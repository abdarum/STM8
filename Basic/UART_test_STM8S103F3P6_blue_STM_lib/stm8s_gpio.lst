                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Mar 19 2016) (Linux)
                                      4 ; This file was generated Thu Aug 29 20:32:38 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module stm8s_gpio
                                      7 	.optsdcc -mstm8
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _GPIO_DeInit
                                     13 	.globl _GPIO_Init
                                     14 	.globl _GPIO_Write
                                     15 	.globl _GPIO_WriteHigh
                                     16 	.globl _GPIO_WriteLow
                                     17 	.globl _GPIO_WriteReverse
                                     18 	.globl _GPIO_ReadOutputData
                                     19 	.globl _GPIO_ReadInputData
                                     20 	.globl _GPIO_ReadInputPin
                                     21 	.globl _GPIO_ExternalPullUpConfig
                                     22 ;--------------------------------------------------------
                                     23 ; ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DATA
                                     26 ;--------------------------------------------------------
                                     27 ; ram data
                                     28 ;--------------------------------------------------------
                                     29 	.area INITIALIZED
                                     30 ;--------------------------------------------------------
                                     31 ; absolute external ram data
                                     32 ;--------------------------------------------------------
                                     33 	.area DABS (ABS)
                                     34 ;--------------------------------------------------------
                                     35 ; global & static initialisations
                                     36 ;--------------------------------------------------------
                                     37 	.area HOME
                                     38 	.area GSINIT
                                     39 	.area GSFINAL
                                     40 	.area GSINIT
                                     41 ;--------------------------------------------------------
                                     42 ; Home
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area HOME
                                     46 ;--------------------------------------------------------
                                     47 ; code
                                     48 ;--------------------------------------------------------
                                     49 	.area CODE
                                     50 ;	src/stm8s_gpio.c: 53: void GPIO_DeInit(GPIO_TypeDef* GPIOx)
                                     51 ;	-----------------------------------------
                                     52 ;	 function GPIO_DeInit
                                     53 ;	-----------------------------------------
      000000                         54 _GPIO_DeInit:
      000000 52 02            [ 2]   55 	sub	sp, #2
                                     56 ;	src/stm8s_gpio.c: 55: GPIOx->ODR = GPIO_ODR_RESET_VALUE; /* Reset Output Data Register */
      000002 16 05            [ 2]   57 	ldw	y, (0x05, sp)
      000004 17 01            [ 2]   58 	ldw	(0x01, sp), y
      000006 1E 01            [ 2]   59 	ldw	x, (0x01, sp)
      000008 7F               [ 1]   60 	clr	(x)
                                     61 ;	src/stm8s_gpio.c: 56: GPIOx->DDR = GPIO_DDR_RESET_VALUE; /* Reset Data Direction Register */
      000009 1E 01            [ 2]   62 	ldw	x, (0x01, sp)
      00000B 5C               [ 2]   63 	incw	x
      00000C 5C               [ 2]   64 	incw	x
      00000D 7F               [ 1]   65 	clr	(x)
                                     66 ;	src/stm8s_gpio.c: 57: GPIOx->CR1 = GPIO_CR1_RESET_VALUE; /* Reset Control Register 1 */
      00000E 1E 01            [ 2]   67 	ldw	x, (0x01, sp)
      000010 1C 00 03         [ 2]   68 	addw	x, #0x0003
      000013 7F               [ 1]   69 	clr	(x)
                                     70 ;	src/stm8s_gpio.c: 58: GPIOx->CR2 = GPIO_CR2_RESET_VALUE; /* Reset Control Register 2 */
      000014 1E 01            [ 2]   71 	ldw	x, (0x01, sp)
      000016 1C 00 04         [ 2]   72 	addw	x, #0x0004
      000019 7F               [ 1]   73 	clr	(x)
      00001A 5B 02            [ 2]   74 	addw	sp, #2
      00001C 81               [ 4]   75 	ret
                                     76 ;	src/stm8s_gpio.c: 71: void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, GPIO_Mode_TypeDef GPIO_Mode)
                                     77 ;	-----------------------------------------
                                     78 ;	 function GPIO_Init
                                     79 ;	-----------------------------------------
      00001D                         80 _GPIO_Init:
      00001D 52 05            [ 2]   81 	sub	sp, #5
                                     82 ;	src/stm8s_gpio.c: 81: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      00001F 16 08            [ 2]   83 	ldw	y, (0x08, sp)
      000021 17 04            [ 2]   84 	ldw	(0x04, sp), y
      000023 1E 04            [ 2]   85 	ldw	x, (0x04, sp)
      000025 1C 00 04         [ 2]   86 	addw	x, #0x0004
      000028 1F 01            [ 2]   87 	ldw	(0x01, sp), x
      00002A 1E 01            [ 2]   88 	ldw	x, (0x01, sp)
      00002C F6               [ 1]   89 	ld	a, (x)
      00002D 95               [ 1]   90 	ld	xh, a
      00002E 7B 0A            [ 1]   91 	ld	a, (0x0a, sp)
      000030 43               [ 1]   92 	cpl	a
      000031 6B 03            [ 1]   93 	ld	(0x03, sp), a
      000033 9E               [ 1]   94 	ld	a, xh
      000034 14 03            [ 1]   95 	and	a, (0x03, sp)
      000036 1E 01            [ 2]   96 	ldw	x, (0x01, sp)
      000038 F7               [ 1]   97 	ld	(x), a
                                     98 ;	src/stm8s_gpio.c: 98: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      000039 1E 04            [ 2]   99 	ldw	x, (0x04, sp)
      00003B 5C               [ 2]  100 	incw	x
      00003C 5C               [ 2]  101 	incw	x
                                    102 ;	src/stm8s_gpio.c: 87: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x80) != (uint8_t)0x00) /* Output mode */
      00003D 0D 0B            [ 1]  103 	tnz	(0x0b, sp)
      00003F 2A 20            [ 1]  104 	jrpl	00105$
                                    105 ;	src/stm8s_gpio.c: 91: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      000041 16 04            [ 2]  106 	ldw	y, (0x04, sp)
      000043 90 F6            [ 1]  107 	ld	a, (y)
                                    108 ;	src/stm8s_gpio.c: 89: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x10) != (uint8_t)0x00) /* High level */
      000045 88               [ 1]  109 	push	a
      000046 7B 0C            [ 1]  110 	ld	a, (0x0c, sp)
      000048 A5 10            [ 1]  111 	bcp	a, #0x10
      00004A 84               [ 1]  112 	pop	a
      00004B 27 08            [ 1]  113 	jreq	00102$
                                    114 ;	src/stm8s_gpio.c: 91: GPIOx->ODR |= (uint8_t)GPIO_Pin;
      00004D 1A 0A            [ 1]  115 	or	a, (0x0a, sp)
      00004F 16 04            [ 2]  116 	ldw	y, (0x04, sp)
      000051 90 F7            [ 1]  117 	ld	(y), a
      000053 20 06            [ 2]  118 	jra	00103$
      000055                        119 00102$:
                                    120 ;	src/stm8s_gpio.c: 95: GPIOx->ODR &= (uint8_t)(~(GPIO_Pin));
      000055 14 03            [ 1]  121 	and	a, (0x03, sp)
      000057 16 04            [ 2]  122 	ldw	y, (0x04, sp)
      000059 90 F7            [ 1]  123 	ld	(y), a
      00005B                        124 00103$:
                                    125 ;	src/stm8s_gpio.c: 98: GPIOx->DDR |= (uint8_t)GPIO_Pin;
      00005B F6               [ 1]  126 	ld	a, (x)
      00005C 1A 0A            [ 1]  127 	or	a, (0x0a, sp)
      00005E F7               [ 1]  128 	ld	(x), a
      00005F 20 04            [ 2]  129 	jra	00106$
      000061                        130 00105$:
                                    131 ;	src/stm8s_gpio.c: 103: GPIOx->DDR &= (uint8_t)(~(GPIO_Pin));
      000061 F6               [ 1]  132 	ld	a, (x)
      000062 14 03            [ 1]  133 	and	a, (0x03, sp)
      000064 F7               [ 1]  134 	ld	(x), a
      000065                        135 00106$:
                                    136 ;	src/stm8s_gpio.c: 112: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      000065 1E 04            [ 2]  137 	ldw	x, (0x04, sp)
      000067 1C 00 03         [ 2]  138 	addw	x, #0x0003
                                    139 ;	src/stm8s_gpio.c: 110: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x40) != (uint8_t)0x00) /* Pull-Up or Push-Pull */
      00006A 7B 0B            [ 1]  140 	ld	a, (0x0b, sp)
      00006C A5 40            [ 1]  141 	bcp	a, #0x40
      00006E 27 06            [ 1]  142 	jreq	00108$
                                    143 ;	src/stm8s_gpio.c: 112: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      000070 F6               [ 1]  144 	ld	a, (x)
      000071 1A 0A            [ 1]  145 	or	a, (0x0a, sp)
      000073 F7               [ 1]  146 	ld	(x), a
      000074 20 04            [ 2]  147 	jra	00109$
      000076                        148 00108$:
                                    149 ;	src/stm8s_gpio.c: 116: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
      000076 F6               [ 1]  150 	ld	a, (x)
      000077 14 03            [ 1]  151 	and	a, (0x03, sp)
      000079 F7               [ 1]  152 	ld	(x), a
      00007A                        153 00109$:
                                    154 ;	src/stm8s_gpio.c: 123: if ((((uint8_t)(GPIO_Mode)) & (uint8_t)0x20) != (uint8_t)0x00) /* Interrupt or Slow slope */
      00007A 7B 0B            [ 1]  155 	ld	a, (0x0b, sp)
      00007C A5 20            [ 1]  156 	bcp	a, #0x20
      00007E 27 0A            [ 1]  157 	jreq	00111$
                                    158 ;	src/stm8s_gpio.c: 125: GPIOx->CR2 |= (uint8_t)GPIO_Pin;
      000080 1E 01            [ 2]  159 	ldw	x, (0x01, sp)
      000082 F6               [ 1]  160 	ld	a, (x)
      000083 1A 0A            [ 1]  161 	or	a, (0x0a, sp)
      000085 1E 01            [ 2]  162 	ldw	x, (0x01, sp)
      000087 F7               [ 1]  163 	ld	(x), a
      000088 20 08            [ 2]  164 	jra	00113$
      00008A                        165 00111$:
                                    166 ;	src/stm8s_gpio.c: 129: GPIOx->CR2 &= (uint8_t)(~(GPIO_Pin));
      00008A 1E 01            [ 2]  167 	ldw	x, (0x01, sp)
      00008C F6               [ 1]  168 	ld	a, (x)
      00008D 14 03            [ 1]  169 	and	a, (0x03, sp)
      00008F 1E 01            [ 2]  170 	ldw	x, (0x01, sp)
      000091 F7               [ 1]  171 	ld	(x), a
      000092                        172 00113$:
      000092 5B 05            [ 2]  173 	addw	sp, #5
      000094 81               [ 4]  174 	ret
                                    175 ;	src/stm8s_gpio.c: 141: void GPIO_Write(GPIO_TypeDef* GPIOx, uint8_t PortVal)
                                    176 ;	-----------------------------------------
                                    177 ;	 function GPIO_Write
                                    178 ;	-----------------------------------------
      000095                        179 _GPIO_Write:
                                    180 ;	src/stm8s_gpio.c: 143: GPIOx->ODR = PortVal;
      000095 1E 03            [ 2]  181 	ldw	x, (0x03, sp)
      000097 7B 05            [ 1]  182 	ld	a, (0x05, sp)
      000099 F7               [ 1]  183 	ld	(x), a
      00009A 81               [ 4]  184 	ret
                                    185 ;	src/stm8s_gpio.c: 154: void GPIO_WriteHigh(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
                                    186 ;	-----------------------------------------
                                    187 ;	 function GPIO_WriteHigh
                                    188 ;	-----------------------------------------
      00009B                        189 _GPIO_WriteHigh:
                                    190 ;	src/stm8s_gpio.c: 156: GPIOx->ODR |= (uint8_t)PortPins;
      00009B 1E 03            [ 2]  191 	ldw	x, (0x03, sp)
      00009D F6               [ 1]  192 	ld	a, (x)
      00009E 1A 05            [ 1]  193 	or	a, (0x05, sp)
      0000A0 F7               [ 1]  194 	ld	(x), a
      0000A1 81               [ 4]  195 	ret
                                    196 ;	src/stm8s_gpio.c: 167: void GPIO_WriteLow(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
                                    197 ;	-----------------------------------------
                                    198 ;	 function GPIO_WriteLow
                                    199 ;	-----------------------------------------
      0000A2                        200 _GPIO_WriteLow:
      0000A2 88               [ 1]  201 	push	a
                                    202 ;	src/stm8s_gpio.c: 169: GPIOx->ODR &= (uint8_t)(~PortPins);
      0000A3 1E 04            [ 2]  203 	ldw	x, (0x04, sp)
      0000A5 F6               [ 1]  204 	ld	a, (x)
      0000A6 6B 01            [ 1]  205 	ld	(0x01, sp), a
      0000A8 7B 06            [ 1]  206 	ld	a, (0x06, sp)
      0000AA 43               [ 1]  207 	cpl	a
      0000AB 14 01            [ 1]  208 	and	a, (0x01, sp)
      0000AD F7               [ 1]  209 	ld	(x), a
      0000AE 84               [ 1]  210 	pop	a
      0000AF 81               [ 4]  211 	ret
                                    212 ;	src/stm8s_gpio.c: 180: void GPIO_WriteReverse(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef PortPins)
                                    213 ;	-----------------------------------------
                                    214 ;	 function GPIO_WriteReverse
                                    215 ;	-----------------------------------------
      0000B0                        216 _GPIO_WriteReverse:
                                    217 ;	src/stm8s_gpio.c: 182: GPIOx->ODR ^= (uint8_t)PortPins;
      0000B0 1E 03            [ 2]  218 	ldw	x, (0x03, sp)
      0000B2 F6               [ 1]  219 	ld	a, (x)
      0000B3 18 05            [ 1]  220 	xor	a, (0x05, sp)
      0000B5 F7               [ 1]  221 	ld	(x), a
      0000B6 81               [ 4]  222 	ret
                                    223 ;	src/stm8s_gpio.c: 191: uint8_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
                                    224 ;	-----------------------------------------
                                    225 ;	 function GPIO_ReadOutputData
                                    226 ;	-----------------------------------------
      0000B7                        227 _GPIO_ReadOutputData:
                                    228 ;	src/stm8s_gpio.c: 193: return ((uint8_t)GPIOx->ODR);
      0000B7 1E 03            [ 2]  229 	ldw	x, (0x03, sp)
      0000B9 F6               [ 1]  230 	ld	a, (x)
      0000BA 81               [ 4]  231 	ret
                                    232 ;	src/stm8s_gpio.c: 202: uint8_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
                                    233 ;	-----------------------------------------
                                    234 ;	 function GPIO_ReadInputData
                                    235 ;	-----------------------------------------
      0000BB                        236 _GPIO_ReadInputData:
                                    237 ;	src/stm8s_gpio.c: 204: return ((uint8_t)GPIOx->IDR);
      0000BB 1E 03            [ 2]  238 	ldw	x, (0x03, sp)
      0000BD E6 01            [ 1]  239 	ld	a, (0x1, x)
      0000BF 81               [ 4]  240 	ret
                                    241 ;	src/stm8s_gpio.c: 213: BitStatus GPIO_ReadInputPin(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin)
                                    242 ;	-----------------------------------------
                                    243 ;	 function GPIO_ReadInputPin
                                    244 ;	-----------------------------------------
      0000C0                        245 _GPIO_ReadInputPin:
                                    246 ;	src/stm8s_gpio.c: 215: return ((BitStatus)(GPIOx->IDR & (uint8_t)GPIO_Pin));
      0000C0 1E 03            [ 2]  247 	ldw	x, (0x03, sp)
      0000C2 E6 01            [ 1]  248 	ld	a, (0x1, x)
      0000C4 14 05            [ 1]  249 	and	a, (0x05, sp)
      0000C6 81               [ 4]  250 	ret
                                    251 ;	src/stm8s_gpio.c: 225: void GPIO_ExternalPullUpConfig(GPIO_TypeDef* GPIOx, GPIO_Pin_TypeDef GPIO_Pin, FunctionalState NewState)
                                    252 ;	-----------------------------------------
                                    253 ;	 function GPIO_ExternalPullUpConfig
                                    254 ;	-----------------------------------------
      0000C7                        255 _GPIO_ExternalPullUpConfig:
      0000C7 88               [ 1]  256 	push	a
                                    257 ;	src/stm8s_gpio.c: 233: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000C8 1E 04            [ 2]  258 	ldw	x, (0x04, sp)
      0000CA 1C 00 03         [ 2]  259 	addw	x, #0x0003
                                    260 ;	src/stm8s_gpio.c: 231: if (NewState != DISABLE) /* External Pull-Up Set*/
      0000CD 0D 07            [ 1]  261 	tnz	(0x07, sp)
      0000CF 27 06            [ 1]  262 	jreq	00102$
                                    263 ;	src/stm8s_gpio.c: 233: GPIOx->CR1 |= (uint8_t)GPIO_Pin;
      0000D1 F6               [ 1]  264 	ld	a, (x)
      0000D2 1A 06            [ 1]  265 	or	a, (0x06, sp)
      0000D4 F7               [ 1]  266 	ld	(x), a
      0000D5 20 09            [ 2]  267 	jra	00104$
      0000D7                        268 00102$:
                                    269 ;	src/stm8s_gpio.c: 236: GPIOx->CR1 &= (uint8_t)(~(GPIO_Pin));
      0000D7 F6               [ 1]  270 	ld	a, (x)
      0000D8 6B 01            [ 1]  271 	ld	(0x01, sp), a
      0000DA 7B 06            [ 1]  272 	ld	a, (0x06, sp)
      0000DC 43               [ 1]  273 	cpl	a
      0000DD 14 01            [ 1]  274 	and	a, (0x01, sp)
      0000DF F7               [ 1]  275 	ld	(x), a
      0000E0                        276 00104$:
      0000E0 84               [ 1]  277 	pop	a
      0000E1 81               [ 4]  278 	ret
                                    279 	.area CODE
                                    280 	.area INITIALIZER
                                    281 	.area CABS (ABS)
